import sqlite3
from sqlite3 import Error
import os


def create_connection(db_file):
    """ create a database connection to the SQLite database
        specified by db_file
    :param db_file: database file
    :return: Connection object or None
    """
    try:
        conn = sqlite3.connect(db_file)
        return conn
    except Error as e:
        print(e)
 
    return None

def create_table(conn, create_table_sql):
    """ create a table from the create_table_sql statement
    :param conn: Connection object
    :param create_table_sql: a CREATE TABLE statement
    :return:
    """
    try:
        c = conn.cursor()
        c.execute(create_table_sql)
    except Error as e:
        print(e)


def main():
    database = "C:\\Users\\adam.chase\\Desktop\\school\\ist303\\pythonsqlite.db"
 
    sql_create_application_table = """ CREATE TABLE IF NOT EXISTS  application (
                                    camper_id integer PRIMARY KEY,
                                    name_first text,
                                    name_last text,
                                    address text,
                                    roomate_pref,
                                    band_pref,
                                    email text,
                                    camp_dates text)
                                    ; """
 
    sql_create_emergency_contact_table = """CREATE TABLE IF NOT EXISTS emergency_contact (
                                camper_id integer PRIMARY KEY,
                                name_first text,
                                name_last text,
                                emergency_contact text)
                                ;"""
    
    
    sql_create_legal_table = """CREATE TABLE IF NOT EXISTS legal (
                                        camper_id integer PRIMARY KEY,
                                        name_first text,
                                        name_last text,
                                        age integer,
                                        gender text,
                                        parent text);"""
                                        
    
    sql_create_medical_table = """CREATE TABLE IF NOT EXISTS medical (
                                        camper_id integer PRIMARY KEY,
                                        name_first text,
                                        name_last text,
                                        medical_insturance text,
                                        doctor text,
                                        dentist text,
                                        allergies text,
                                        medications text);"""

    sql_create_notification_table = """CREATE TABLE IF NOT EXISTS notification (
                                            camper_id integer PRIMARY KEY,
                                            name_first text,
                                            camp_dates text,
                                            director_decision text,
                                            director_comments text,
                                            director_rank integer,
                                            category text,
                                            letter_type text,
                                            notification_sent_date text);"""

    sql_create_check_in_table = """--form's, equiptment, and clothes are boolean 1,0's indicating if camper brought it or not
                                        CREATE TABLE IF NOT EXISTS check_in (
                                        camper_id integer PRIMARY KEY,
                                        check_in_date text,
                                        application_form integer,
                                        emergency_contact_form integer,
                                        legal_form integer,
                                        medical_form integer,
                                        equiptment integer,
                                        clothes integer)
                                        ;"""  

    sql_create_dorm_table = """CREATE TABLE IF NOT EXISTS dorm (
                                    camper_id integer PRIMARY KEY,
                                    camp_date text,
                                    dorm_number integer,
                                    category text,
                                    gender text,
                                    age integer);"""  

    sql_create_band_table = """CREATE TABLE IF NOT EXISTS band(
                                    camper_id integer PRIMARY KEY,
                                    camp_date text,
                                    band text,
                                    category text,
                                    gender text,
                                    director_rank integer,
                                    request text);"""  
    
    # create a database connection
    conn = create_connection(database)
    if conn is not None:
        # create application table
        create_table(conn, sql_create_application_table)
        # create emergency contact table
        create_table(conn, sql_create_emergency_contact_table)
        # create legal table
        create_table(conn, sql_create_legal_table)
        # create medical table
        create_table(conn, sql_create_medical_table)
        # create notification table
        create_table(conn, sql_create_notification_table)
        # create check table
        create_table(conn, sql_create_check_in_table)
        # create dorm table
        create_table(conn, sql_create_dorm_table)
        # create band table
        create_table(conn, sql_create_band_table)
    else:
        print("Error! cannot create the database connection.")

if __name__ == '__main__':
    main()

